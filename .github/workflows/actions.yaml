name: Build

on: [push, pull_request]

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        working-directory: app
        run: |
          python -m pip install --upgrade pip pyinstaller pytest
          pip install -r requirements.txt

      - name: Test with pytest
        working-directory: app
        run: pytest

      - name: Build with pyinstaller
        working-directory: app
        run: pyinstaller --onefile --name=app-${{ matrix.os }} main.py

      - name: Prepare artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move-item -path ${{ github.workspace }}/app/dist/app-${{ matrix.os }} -destination .

      - name: Prepare artifacts (UNIX)
        if: matrix.os != 'windows-latest'
        run: |
          mv ${{ github.workspace }}/app/dist/app-${{ matrix.os }} .

      - name: Deploy artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ matrix.os }}
          path: app-${{ matrix.os }}

      # - name: Upload release asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
